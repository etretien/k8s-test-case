- name: Deploy k8s-test-case
  hosts: localhost
  gather_facts: no
  tasks:
    - name: Install Helm
      ansible.builtin.package:
        name: helm
        state: present

    - name: Add Bitnami Helm repository
      community.kubernetes.helm_repository:
        name: bitnami
        repo_url: https://charts.bitnami.com/bitnami
        state: present

    - name: Install PostgreSQL using Helm chart
      community.kubernetes.helm:
        name: k8s-test-case-postgresql
        chart_ref: bitnami/postgresql
        release_namespace: default
        create_namespace: yes
        wait: yes
        values:
          auth:
            database: clients

    - name: Retrieve PostgreSQL password
      ansible.builtin.shell:
        cmd: kubectl get secret --namespace default k8s-test-case-postgresql -o jsonpath="{.data.postgres-password}" | base64 -d
      register: postgresql_password_output

    - name: Retrieve PostgreSQL pod name
      community.kubernetes.k8s_info:
        kind: Pod
        namespace: default
        label_selectors:
          app.kubernetes.io/instance=k8s-test-case-postgresql
      register: postgres_pod

    - name: Create a table in PostgreSQL
      ansible.builtin.shell:
        cmd: kubectl exec -it {{ postgres_pod.resources[0].metadata.name }} -- env PGPASSWORD={{ postgresql_password_output.stdout }} psql --username=postgres --dbname=clients -c "CREATE TABLE IF NOT EXISTS client_ips (id SERIAL PRIMARY KEY, client_ip INET NOT NULL, timestamp TIMESTAMPTZ DEFAULT current_timestamp);"
       
    - name: Log in to GitHub Container Registry
      ansible.builtin.command: >
        docker login ghcr.io -u etretien -p {{ github_pat }}
      no_log: true

    - name: Build Docker image
      ansible.builtin.command: >
        docker build --platform linux/amd64 -t ghcr.io/etretien/k8s-test-service:latest {{ playbook_dir }}/k8s-test-service

    - name: Push Docker image
      ansible.builtin.command: >
        docker push ghcr.io/etretien/k8s-test-service:latest

    - name: Install k8s-test-service using Helm chart
      community.kubernetes.helm:
        name: k8s-test-service
        chart_ref: "{{ playbook_dir }}/k8s-test-service-chart"
        release_namespace: default
        create_namespace: yes
        wait: yes
        values:
          image:
            repository: ghcr.io/etretien/k8s-test-service
            tag: latest
          postgresql:
            externalHost: k8s-test-case-postgresql.default.svc.cluster.local
            postgresqlDatabase: clients
            postgresqlUsername: postgres
            postgresqlPassword: "{{ postgresql_password_output.stdout }}"
